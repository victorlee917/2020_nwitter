{"version":3,"sources":["fbase.js","Components/AuthForm.js","Routes/Auth.js","Components/Nweet.js","Components/NweetFactory.js","Routes/Home.js","Components/Navigation.js","Routes/Profile.js","Components/Router.js","Components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DATAB_URL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onClickSocial","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","widht","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","width","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","Navigation","to","displayName","refreshUser","history","useHistory","DisplayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","isLoggedIn","exact","path","Profile","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.912010bc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATAB_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState();\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        const data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        const data = await authService.signInWithEmailAndPassword(\n          email,\n          password\n        );\n      }\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          required\n          onChange={onChange}\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"PW\"\n          value={password}\n          required\n          onChange={onChange}\n        ></input>\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Log In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"Components/AuthForm\";\n\nconst Auth = () => {\n  const onClickSocial = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div>\n      <AuthForm></AuthForm>\n      <div>\n        <button onClick={onClickSocial} name=\"google\">\n          Login with Gmail\n        </button>\n        <button onClick={onClickSocial} name=\"github\">\n          Login with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl) {\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"edit\"\n              value={newNweet}\n              onChange={onChange}\n              required\n            ></input>\n            <input type=\"submit\" value=\"update\"></input>\n          </form>\n          <button onClick={toggleEditing}>cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} widht=\"50px\" height=\"50px\"></img>\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete</button>\n              <button onClick={toggleEditing}>edit</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Nweet from \"./Nweet\";\nimport { storageService, dbService } from \"fbase\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearPhotoClick = () => setAttachment(null);\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        onChange={onChange}\n        type=\"text\"\n        value={nweet}\n        placeholder=\"whats on your mind?\"\n        maxLength={120}\n      ></input>\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange}></input>\n      <input type=\"submit\" value=\"Nweet\"></input>\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearPhotoClick}>clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"../Components/Nweet\";\nimport NweetFactory from \"Components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div>\n      <NweetFactory userObj={userObj}></NweetFactory>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          ></Nweet>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  console.log(userObj);\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">\n            {userObj.displayName ? userObj.displayName : \"profile\"}\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.DisplayName);\n  const onLogoutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  // const getMyNweets = async () => {\n  //   const nweets = await dbService\n  //     .collection(\"nweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\")\n  //     .get();\n  //   console.log(nweets.docs.map((doc) => doc.data()));\n  // };\n  useEffect(() => {\n    // getMyNweets();\n  }, []);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Display Name\"\n          onChange={onChange}\n        ></input>\n        <input type=\"submit\" value=\"Update Profile\"></input>\n      </form>\n      <button onClick={onLogoutClick}>Logout</button>\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Auth from \"Routes/Auth\";\nimport Home from \"Routes/Home\";\nimport Navigation from \"Components/Navigation\";\nimport Profile from \"Routes/Profile\";\n\nexport default ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj}></Home>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\n            </Route>\n            <Redirect from=\"*\" to=\"/\"></Redirect>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth></Auth>\n            </Route>\n            <Redirect from=\"*\" to=\"/\"></Redirect>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"Components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        ></AppRouter>\n      ) : (\n        \"Loading\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}